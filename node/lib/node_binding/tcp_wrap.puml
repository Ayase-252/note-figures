@startuml node_binding/tcp_wrap

!include stream_wrap.puml
!include async_wrap.puml

namespace lib {
  namespace tcp_wrap <<InternalNodeModule>> {
    class TCP extends lib.stream_wrap.LibuvStreamWrap {
      +reading: boolean
      +[own_symbol]
      onconnection

      constructor(node.SocketType typeValue)
      open(Number fd): ErrorDescription
      bind(Number ip, Number port, Number flags): ErrorDescription
      bind6(Number ip, Number port, Number flags): ErrorDescription
      listen(Number backlog): ErrorDescription
      connent(Object reqWrapObj, Number ip, Number port): ErrorDescription
      connect6(Object reqWrapObj, Number ip, Number port): ErrorDescription
      getsockname(Object obj)
      getpeername(Object obj)
      setNoDelay(boolean enabled): ErrorDescription
      setKeepAlive(number enable, number delay): ErrorDescription
      setSimultaneousAccepts()
    }

    note left of TCPWrapper::setSimultaneousAccepts
      only on Windows
    end note

    class TCPConnectWrap extends lib.async_wrap.AsyncWrap {

    }

    class constants {
      SOCKET
      SERVER
      UV_TCP_IPV6ONLY
    }
  }
}

@enduml
